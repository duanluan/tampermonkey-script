/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var e={"./common/src/Url.ts":(e,t,r)=>{function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}r.r(t),r.d(t,{default:()=>n});var n=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,r,n;return t=e,n=[{key:"getPath",value:function(e){e||(e=window.location.href);var t=window.location.host;return e.substring(e.indexOf(t)+t.length)}}],(r=null)&&o(t.prototype,r),n&&o(t,n),Object.defineProperty(t,"prototype",{writable:!1}),e}()}},t={};function r(o){var n=t[o];if(void 0!==n)return n.exports;var a=t[o]={exports:{}};return e[o](a,a.exports,r),a.exports}r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};(()=>{r.r(o);var e=r("./common/src/Url.ts"),t=(window.location.href,'div[class="a-section a-spacing-none a-spacing-top-micro"]');$(document);e.default.getPath().startsWith("/s")&&$(t).each((function(e){$(void 0)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoiO2tRQUFxQkEsRUFBQUEsMktBS25CLFNBQWVDLEdBQ1JBLElBQ0hBLEVBQU1DLE9BQU9DLFNBQVNDLE1BRXhCLElBQU1DLEVBQU9ILE9BQU9DLFNBQVNFLEtBQzdCLE9BQU9KLEVBQUlLLFVBQVVMLEVBQUlNLFFBQVFGLEdBQVFBLEVBQUtHLHFHQVY3QlIsS0NDakJTLEVBQTJCLEdBRy9CLFNBQVNDLEVBQW9CQyxHQUU1QixJQUFJQyxFQUFlSCxFQUF5QkUsR0FDNUMsUUFBcUJFLElBQWpCRCxFQUNILE9BQU9BLEVBQWFFLFFBR3JCLElBQUlDLEVBQVNOLEVBQXlCRSxHQUFZLENBR2pERyxRQUFTLElBT1YsT0FIQUUsRUFBb0JMLEdBQVVJLEVBQVFBLEVBQU9ELFFBQVNKLEdBRy9DSyxFQUFPRCxRQ3BCZkosRUFBb0JPLEVBQUksQ0FBQ0gsRUFBU0ksS0FDakMsSUFBSSxJQUFJQyxLQUFPRCxFQUNYUixFQUFvQlUsRUFBRUYsRUFBWUMsS0FBU1QsRUFBb0JVLEVBQUVOLEVBQVNLLElBQzVFRSxPQUFPQyxlQUFlUixFQUFTSyxFQUFLLENBQUVJLFlBQVksRUFBTUMsSUFBS04sRUFBV0MsTUNKM0VULEVBQW9CVSxFQUFJLENBQUNLLEVBQUtDLElBQVVMLE9BQU9NLFVBQVVDLGVBQWVDLEtBQUtKLEVBQUtDLEdDQ2xGaEIsRUFBb0JvQixFQUFLaEIsSUFDSCxvQkFBWGlCLFFBQTBCQSxPQUFPQyxhQUMxQ1gsT0FBT0MsZUFBZVIsRUFBU2lCLE9BQU9DLFlBQWEsQ0FBRUMsTUFBTyxXQUU3RFosT0FBT0MsZUFBZVIsRUFBUyxhQUFjLENBQUVtQixPQUFPLDBEQ2VyREMsR0FEV2hDLE9BQU9DLFNBQVNDLEtBRUMsNkRBRXJCK0IsRUFBRUMsVUFLTHBDLEVBQUFBLFFBQUFBLFVBQWNxQyxXQUFXLE9BQzNCRixFQUFFRCxHQUFvQ0ksTUFBSyxTQUFDQyxHQUM1QkoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YW1wZXJtb25rZXktc2NyaXB0LXV0aWxzLy4vY29tbW9uL3NyYy9VcmwudHMiLCJ3ZWJwYWNrOi8vdGFtcGVybW9ua2V5LXNjcmlwdC11dGlscy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90YW1wZXJtb25rZXktc2NyaXB0LXV0aWxzL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90YW1wZXJtb25rZXktc2NyaXB0LXV0aWxzL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdGFtcGVybW9ua2V5LXNjcmlwdC11dGlscy93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL3RhbXBlcm1vbmtleS1zY3JpcHQtdXRpbHMvLi9hbWF6b24ta2luZGxlLWRvdWJhbi1zY29yZS9zcmMvbWFpbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBVcmwge1xuICAvKipcbiAgICog5qC55o2uIFVSTCDojrflj5bot6/lvoTvvIjmjpLpmaTln5/lkI3vvIlcbiAgICogQHBhcmFtIHVybCBVUkzvvIzpu5jorqTkuLrlvZPliY3lnLDlnYBcbiAgICovXG4gIHN0YXRpYyBnZXRQYXRoKHVybD86IHN0cmluZykge1xuICAgIGlmICghdXJsKSB7XG4gICAgICB1cmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgICB9XG4gICAgY29uc3QgaG9zdCA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0O1xuICAgIHJldHVybiB1cmwuc3Vic3RyaW5nKHVybC5pbmRleE9mKGhvc3QpICsgaG9zdC5sZW5ndGgpO1xuICB9XG59XG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsIi8vID09VXNlclNjcmlwdD09XG4vLyBAbmFtZSAgICAgICAgIOS6mumprOmAiiBLaW5kbGUg5bGV56S66LGG55Oj6K+E5YiGXG4vLyBAbmFtZXNwYWNlICAgIGh0dHA6Ly90YW1wZXJtb25rZXkubmV0L1xuLy8gQHZlcnNpb24gICAgICAwLjAuMVxuLy8gQGRlc2NyaXB0aW9uICDkuprpqazpgIogS2luZGxlIOWxleekuuixhueTo+ivhOWIhu+8jOebruWJjeS7heaUr+aMgeS4reS6muOAglxuLy8gQGF1dGhvciAgICAgICBkdWFubHVhblxuLy8gQGxpY2Vuc2UgICAgICBBcGFjaGUgMi4wXG4vLyBAbWF0Y2ggICAgICAgICo6Ly93d3cuYW1hem9uLmNuLypcbi8vIEBpY29uICAgICAgICAgaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9zMi9mYXZpY29ucz9zej02NCZkb21haW49YW1hem9uLmNuXG4vLyBAcmVxdWlyZSAgICAgIGh0dHBzOi8vY2RuLmJvb3RjZG4ubmV0L2FqYXgvbGlicy9qcXVlcnkvMy42LjAvanF1ZXJ5LnNsaW0ubWluLmpzXG4vLyBAcmVxdWlyZSAgICAgIGh0dHBzOi8vY2RuLmJvb3RjZG4ubmV0L2FqYXgvbGlicy9heGlvcy8wLjI3LjIvYXhpb3MubWluLmpzXG4vLyBAZ3JhbnQgICAgICAgIG5vbmVcbi8vID09L1VzZXJTY3JpcHQ9PVxuXG5pbXBvcnQgVXJsIGZyb20gJy4uLy4uL2NvbW1vbi9zcmMvVXJsJztcbmltcG9ydCB7QXhpb3N9IGZyb20gJ2F4aW9zJztcblxuZGVjbGFyZSBjb25zdCBheGlvczogQXhpb3M7XG5cbmNvbnN0IGhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZixcbiAgc2VsZWN0b3JzID0ge1xuICAgIGxpc3RTY29yZUFuZEV2YWxRdWFudGl0eTogJ2RpdltjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLW1pY3JvXCJdJyxcbiAgfSxcbiAgJGRvbSA9ICQoZG9jdW1lbnQpO1xuXG4oKCkgPT4ge1xuICAndXNlIHN0cmljdCc7XG5cbiAgaWYgKFVybC5nZXRQYXRoKCkuc3RhcnRzV2l0aCgnL3MnKSkge1xuICAgICQoc2VsZWN0b3JzLmxpc3RTY29yZUFuZEV2YWxRdWFudGl0eSkuZWFjaCgoaSkgPT4ge1xuICAgICAgY29uc3QgJHRoaXMgPSAkKHRoaXMpO1xuXG4gICAgICAvLyAvLyDojrflj5blkI3np7BcbiAgICAgIC8vIGNvbnN0IG5hbWUgPSAkdGhpcy5wYXJlbnQoKS5jaGlsZHJlbigpLmVxKDEpLnRleHQoKTtcbiAgICAgIC8vIGNvbnNvbGUubG9nKG5hbWUpO1xuICAgICAgLy9cbiAgICAgIC8vIC8vIOiOt+WPluixhueTo+ivhOWIhlxuICAgICAgLy8gYXhpb3MuZ2V0KCdodHRwczovL3d3dy5iYWlkdS5jb20vJykudGhlbih2YWx1ZSA9PiB7XG4gICAgICAvLyAgIGNvbnNvbGUubG9nKDEpO1xuICAgICAgLy8gICAvLyBodHRwczovL3NlYXJjaC5kb3ViYW4uY29tL2Jvb2svc3ViamVjdF9zZWFyY2g/c2VhcmNoX3RleHQ9JUU3JUJCJTlEJUU1JThGJUFCXG4gICAgICAvLyB9KVxuICAgICAgLy9cbiAgICAgIC8vICR0aGlzLmFwcGVuZChgXG4gICAgICAvLyAgIDxkaXY+6LGG55Oj6K+E5YiG77yaPC9kaXY+XG4gICAgICAvLyBgKTtcbiAgICB9KVxuICB9XG59KSgpO1xuIl0sIm5hbWVzIjpbIlVybCIsInVybCIsIndpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsImhvc3QiLCJzdWJzdHJpbmciLCJpbmRleE9mIiwibGVuZ3RoIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwidW5kZWZpbmVkIiwiZXhwb3J0cyIsIm1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJkIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJvYmoiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJzZWxlY3RvcnMiLCIkIiwiZG9jdW1lbnQiLCJzdGFydHNXaXRoIiwiZWFjaCIsImkiXSwic291cmNlUm9vdCI6IiJ9